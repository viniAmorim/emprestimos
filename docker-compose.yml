# Removido o atributo 'version' para evitar o aviso de obsoleto
# version: "3.7"

networks:
  docker.network:
    driver: bridge

volumes:
  mysql_data:
  app_data: # Volume nomeado para o código da aplicação (com permissões forçadas)
    driver: local
    driver_opts:
      type: none
      # uid=33 e gid=33 são os IDs padrão do usuário 'www-data' no Alpine/Debian/Ubuntu
      # umask=000 permite permissão total para criação de arquivos/diretórios.
      o: bind,uid=33,gid=33,umask=000
      device: ${PWD} # Aponta para a raiz do seu projeto no host (WSL2 nativo)
  app_uploads:
    # Nenhuma driver_opts ou 'device' aqui! O Docker gerencia o armazenamento.

services:
  php:
    build: ./app/docker/php
    restart: unless-stopped
    container_name: docker.php
    tty: true
    depends_on:
      - mysql
    networks:
      - docker.network
    volumes:
      - app_data:/var/www # Monta o código da aplicação
      # Monta o volume de uploads no diretório 'images'
      - app_uploads:/var/www/app/public_html/painel/images/

  apache:
    build: ./app/docker/apache
    restart: unless-stopped
    container_name: docker.apache
    tty: true
    depends_on:
      - php
    ports:
      - "80:80"
      - "443:443"
    networks:
      - docker.network
    volumes:
      - app_data:/var/www # Monta o código da aplicação
      # Monta o volume de uploads no diretório 'images' (Apache também precisa acessar)
      - app_uploads:/var/www/app/public_html/painel/images/
      # Monta os certificados SSL autoassinados do seu projeto
      - ${SSL_CERTS_PATH}:/etc/letsencrypt/live/app.ucredcredito.com/:ro

  mysql:
    image: mysql:5.7
    restart: unless-stopped
    container_name: docker.mysql
    tty: true
    mem_limit: 1g
    deploy:
      resources:
        limits:
          memory: 1g
        reservations:
          memory: 512m
    networks:
      - docker.network
    volumes:
      - ./mysql-data:/var/lib/mysql
      - "./docker/mysql/mysql.cnf:/etc/mysql/conf.d/custom.cnf:ro"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-development}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-mysql}
      MYSQL_USER: ${MYSQL_USER:-mysql}

  phpmyadmin:
    image: phpmyadmin
    container_name: docker.phpmyadmin
    tty: true
    depends_on:
      - mysql
    ports:
      - "8080:80"
    networks:
      - docker.network
    environment:
      PMA_HOST: mysql
      PMA_ARBITRARY: 1
      PMA_PORT: 3306
